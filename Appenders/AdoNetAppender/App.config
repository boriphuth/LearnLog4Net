<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type=" log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>

  <log4net>


    <!-- SQL Server Appender-->
    <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">

      <connectionType value="System.Data.SQLite.SQLiteConnection, System.Data.SQLite" />
      <!--connection, assembly-->
      <bufferSize value="100" />
      <connectionString value="Data Source=..\..\AdoNetAppender.db;Version=3;" />
      <commandText value="INSERT INTO Logs (Date,Level,Logger,Message) VALUES (@date, @level, @logger, @message);"/>
      <parameter>
        <parameterName value="@date" />
        <dbType value="String" />
        <!--<layout type="log4net.Layout.RawTimeStampLayout" />-->
        <layout type="log4net.Layout.PatternLayout" value="%date{yyyy-MM-dd HH:mm:ss.fff}" />
        <!--for SQLite TEXT as ISO8601 strings ("YYYY-MM-DD HH:MM:SS.SSS")-->
      </parameter>
      <!--
1.2 Date and Time Datatype
SQLite does not have a storage class set aside for storing dates and/or times. Instead, the built-in Date And Time Functions of SQLite are capable of storing dates and times as TEXT, REAL, or INTEGER values:
    TEXT as ISO8601 strings ("YYYY-MM-DD HH:MM:SS.SSS").
    REAL as Julian day numbers, the number of days since noon in Greenwich on November 24, 4714 B.C. according to the proleptic Gregorian calendar.
    INTEGER as Unix Time, the number of seconds since 1970-01-01 00:00:00 UTC. 
Applications can chose to store dates and times in any of these formats and freely convert between formats using the built-in date and time functions. 
      -->

      <parameter>
        <parameterName value="@level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>


    </appender>
    <!--end ADO.NET appender-->

    <!--default for all logger-->
    <root>
      <level value="DEBUG"/>
      <appender-ref ref="AdoNetAppender"/>
    </root>

  </log4net>


  <appSettings>
    <add key="log4net.Internal.Debug" value="true"/>
    <!--true to turn on-->
  </appSettings>

  <system.diagnostics>
    <trace autoflush="true">
      <listeners>
        <add
            name="textWriterTraceListener"
            type="System.Diagnostics.TextWriterTraceListener"
            initializeData="C:\log4net-debug.txt" />
      </listeners>
    </trace>
  </system.diagnostics>

</configuration>